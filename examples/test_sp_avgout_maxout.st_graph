# -*- coding: utf-8 -*-
# Copyright (c) 2017 - for information on the respective copyright owner
# see the NOTICE file and/or the repository https://github.com/boschresearch/statestream
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# An example to test / illustrate the avgout / maxout feature for
# synapse-pools.
# Dataset required: 
#     * mnist (see interfaces/process_if_mnist.py)


name: test_sp_avgout_maxout
agents: 32
neuron_pools:
    image:
        shape: [1, 28, 28]
        noise: normal
        noise_mean: 0.0
        noise_std: 0.2
        tags: [sensor]
    label:
        shape: [10, 1, 1]
        tags: [sensor]
    hidden1:
        shape: [16, 14, 14]
        tags: [hidden]
    hidden2:
        shape: [32, 7, 7]
        tags: [hidden]
    hidden3:
        shape: [128, 1, 1]
        tags: [hidden]
    prediction:
        shape: [10, 1, 1]
        act: softmax
        tags: [prediction]
synapse_pools:
    img_hidden1:
        source:
        - [image]
        target: hidden1
        rf: 5
    hidden1_2:
        source:
        - [hidden1]
        target: hidden2
        rf: 
        - [5]
        avgout: 4
    hidden2_3:
        source:
        - [hidden2]
        target: hidden3
        maxout: 2
    hidden3_pred:
        source:
        - [hidden3]
        target: prediction
plasticities:
    hidden_loss:
        type: loss
        loss_function: negloglikelihood
        source: prediction
        source_t: 4
        target: label
        target_t: 0
        optimizer: adam
        lr: 1e-4
        decay: 0.999
        momentum: 0.99
        parameter:
        - [sp, img_hidden1, W_0_0]
        - [sp, hidden1_2, W_0_0]
        - [sp, hidden2_3, W_0_0]
        - [sp, hidden3_pred, W_0_0]
        - [np, hidden3, b]
interfaces:
    mnist_small:
        type: mnist
        in: [mnist_pred]
        out: [mnist_image, mnist_label]
        remap:
            mnist_image: image
            mnist_label: label
            mnist_pred: prediction
        source_file: /opt/dl/data/mnist.pkl.gz
