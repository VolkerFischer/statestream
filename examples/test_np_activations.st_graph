# -*- coding: utf-8 -*-
# Copyright (c) 2017 - for information on the respective copyright owner
# see the NOTICE file and/or the repository https://github.com/VolkerFischer/statestream
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# An example to test / illustrate some activation functions.
# Dataset required: 
#     * mnist (see interfaces/process_if_mnist.py)


name: test_np_activations
agents: 4
neuron_pools:
    np_Id:
        shape: [16, 16, 16]
        act: Id
    np_tanh:
        shape: [16, 16, 16]
        act: tanh
    np_relu:
        shape: [16, 16, 16]
        act: relu
    np_selu:
        shape: [16, 16, 16]
        act: selu
    np_leakyrelu:
        shape: [16, 16, 16]
        act: leakyrelu
    np_softmax:
        shape: [16, 16, 16]
        act: softmax
    np_softplus:
        shape: [16, 16, 16]
        act: softplus
    np_exp:
        shape: [16, 16, 16]
        act: exp
    np_mexp:
        shape: [16, 16, 16]
        act: mexp
    np_square:
        shape: [16, 16, 16]
        act: square
    np_msquare:
        shape: [16, 16, 16]
        act: msquare
    np_elu:
        shape: [16, 16, 16]
        act: elu
    np_sigmoid:
        shape: [16, 16, 16]
        act: sigmoid
    np_gaussian:
        shape: [16, 16, 16]
        act: gaussian
    image:
        shape: [1, 32, 32]
        tags: [sensor]
    hidden:
        shape: [16, 16, 16]
        tags: [hidden]
synapse_pools:
    ret_hidden:
        source:
        - [image]
        target: hidden
        rf: 5
    sp_Id:
        source: 
        - [hidden]
        target: np_Id
        init: id
        rf: 1
    sp_tanh:
        source: 
        - [hidden]
        target: np_tanh
        init: id
        rf: 1
    sp_relu:
        source: 
        - [hidden]
        target: np_relu
        init: id
        rf: 1
    sp_selu:
        source: 
        - [hidden]
        target: np_selu
        init: id
        rf: 1
    sp_leakyrelu:
        source: 
        - [hidden]
        target: np_leakyrelu
        init: id
        rf: 1
    sp_softmax:
        source: 
        - [hidden]
        target: np_softmax
        init: id
        rf: 1
    sp_softplus:
        source: 
        - [hidden]
        target: np_softplus
        init: id
        rf: 1
    sp_exp:
        source: 
        - [hidden]
        target: np_exp
        init: id
        rf: 1
    sp_mexp:
        source: 
        - [hidden]
        target: np_mexp
        init: id
        rf: 1
    sp_square:
        source: 
        - [hidden]
        target: np_square
        init: id
        rf: 1
    sp_msquare:
        source: 
        - [hidden]
        target: np_msquare
        init: id
        rf: 1
    sp_elu:
        source: 
        - [hidden]
        target: np_elu
        init: id
        rf: 1
    sp_sigmoid:
        source: 
        - [hidden]
        target: np_sigmoid
        init: id
        rf: 1
    sp_gaussian:
        source: 
        - [hidden]
        target: np_gaussian
        init: id
        rf: 1
plasticities: {}
interfaces:
    roman_numerals:
        type: roman_numerals
        in: []
        out: [rn_image]
        remap:
            rn_image: image
